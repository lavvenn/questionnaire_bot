import random

from aiogram import Router, F , Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command, CommandStart

from keyboards import builder, inline, reply
from data.db import get_user_data, get_users_id_list

from utils.states import View_profiles

from config import EROR_TEXT, ADMIN_ID_LIST


router = Router()

START_TEXT = """
**–ü—Ä–∏–≤–µ—Ç!** üòä
–Ø —Ç–≤–æ–π *–ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫* –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∞–Ω–∫–µ—Ç. –ú–æ—è —Ñ—É–Ω–∫—Ü–∏—è - –æ–±–ª–µ–≥—á–∏—Ç—å —Ç–µ–±–µ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç, –¥–µ–ª–∞—è –µ–≥–æ **–±—ã—Å—Ç—Ä—ã–º –∏ —É–¥–æ–±–Ω—ã–º**. –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:
- *–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É*: –°–æ–∑–¥–∞–π —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É, —É–∫–∞–∑–∞–≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ.
- *–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã*: –ü–æ—Å–º–æ—Ç—Ä–∏ –∞–Ω–∫–µ—Ç—ã –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–∞—Ä–∏–∞–Ω—Ç—ã.
- *–ü–æ–∏—Å–∫ –∞–Ω–∫–µ—Ç*: –ù–∞–π–¥–∏ –∞–Ω–∫–µ—Ç—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–≤–æ–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
–ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ. –£–¥–∞—á–∏! ü§ñ‚ú®
"""

#<----message handlers---->
@router.message(CommandStart())
async def start_command(message: Message):
    await message.answer(text=START_TEXT, parse_mode='Markdown', reply_markup= reply.start_kb)


@router.message(F.text == "üë§ –º–æ—è –∞–Ω–∫–µ—Ç–∞")
async def my_profile_command(message: Message):
    user_data = get_user_data(message.from_user.id)
    formated_text = []
    [formated_text.append(f"{key}: {value}") for key, value in user_data.items() if key != "photo"]
    await message.answer_photo(photo= user_data.pop("photo"), caption= "\n".join(formated_text))


@router.message(F.text == "‚ùì –ø–æ–º–æ—â—å")
async def norm_kb(message: Message):
    await message.answer(text= "—á–µ–ª, –Ω—É —Ç—É—Ç –∂–µ –≤—Å—ë –æ—á–µ–≤–∏–¥–Ω–æ. –µ—Å–ª–∏ —Ç–µ–±–µ —Å –≠–¢–ò–ú –Ω—É–∂–Ω–æ –ø–æ–º–æ—â—å —Ç–æ —Å–æ–≤–µ—Ç—É—é —Ç–µ–±–µ –ø—Ä–æ—Å—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")


@router.message(Command("admin"))
async def debug_command(message: Message):
    if message.from_user.id in ADMIN_ID_LIST:
        await message.answer(text="–≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é", reply_markup=builder.admin_panel())
        await message.delete()
    else:
        await message.answer(text = EROR_TEXT)


@router.message()
async def all_message(message: Message):
    await message.answer(text = EROR_TEXT) 

#<----callback handlers---->

# TODO –¥–æ–¥–µ–ª–∞—Ç—å —à—Ç—É–∫–∏

# @router.callback_query(F.data == "üëç")
# async def send_matched_profile(query: CallbackQuery, bot: Bot):
#     await bot.get_chat_member()
