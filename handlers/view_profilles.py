import random

from aiogram import Router, F 
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from utils.states import View_profiles

from keyboards.builder import next_profile

from data.db import get_user_data, get_users_id_list

router = Router()

@router.message(F.text == "üîç—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã(–Ω–æ—Ä–º)")
async def view_profiles(message : Message, state: FSMContext):
    await state.set_state(View_profiles.view)
    await state.update_data(unviewed = get_users_id_list())
    await message.answer(text = "—á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ next", reply_markup=next_profile())
    
    
@router.message(View_profiles.view)
async def view_profiles_text(message: Message, state: FSMContext):
    await message.answer(text = "—Ç—É—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞–¥–æ")

@router.callback_query(View_profiles.view)
async def view_profiles_callback(query: CallbackQuery, state: FSMContext):
    if query.data == "view_next_profile":
        try:
            state_data = await state.get_data()

            unviewed_list = state_data['unviewed']
            
            user_id = random.choice(unviewed_list)

            unviewed_list.remove(user_id)

            user_data = get_user_data(user_id)

            formated_text = []
            [formated_text.append(f"{key}: {value}") for key, value in user_data.items() if key != "photo"]


            await query.message.answer_photo(photo= user_data.pop("photo"), caption= "\n".join(formated_text), reply_markup=next_profile())
            await query.answer(text='—Å–ª–µ–¥—É—é—â–∞—è –∞–Ω–∫–µ—Ç–∞',)
        except IndexError:
            await query.message.answer('—ç—Ç–æ –±—ã–ª–∏ –≤—Å–µ –∞–Ω–∫–µ—Ç—ã')
            await query.answer(text = '–∫–æ–Ω–µ—Ü')
    elif query.data == "stop_view_profile":
        await state.clear()
        await query.message.answer(text = "–≤—ã –≤—ã—à–ª–∏ –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∫–µ—Ç")
        await query.answer()
